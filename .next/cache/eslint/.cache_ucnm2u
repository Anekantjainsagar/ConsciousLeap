[{"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Authorized\\Captcha.js":"1","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Carousel.js":"2","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\CerifiedTherapist.js":"3","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\ClientTestimonials.js":"4","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\CommunicationChannels.js":"5","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\ConsciousLeapBlog.js":"6","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\ConsciousStore.js":"7","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Drawer.js":"8","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\GlobalPresence.js":"9","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\HowItWorks.js":"10","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Lines\\Line1.js":"11","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Lines\\Line2.js":"12","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\MemberStatistics.js":"13","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\MembersTestimonials.js":"14","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\MindfulTherapist.js":"15","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\RegisterBlock.js":"16","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Utils\\Footer.js":"17","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Utils\\Navbar.js":"18","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\WhyConsciousLeap.js":"19","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\expertise-area\\page.tsx":"20","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\layout.js":"21","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\page.js":"22","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\questionnaire\\page.tsx":"23","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapist-review\\page.jsx":"24","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapist-review\\[name]\\page.tsx":"25","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\register\\page.jsx":"26","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\[name]\\page.jsx":"27","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\dashboard\\edit\\page.jsx":"28","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\dashboard\\page.jsx":"29","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\login\\page.jsx":"30","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\register\\page.jsx":"31","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(therapist)\\Components\\Utils\\Footer.js":"32","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(therapist)\\Components\\Utils\\Navbar.js":"33","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(therapist)\\layout.js":"34","D:\\Work\\consciousleap\\ConsciousLeap\\app\\layout.js":"35","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\page.jsx":"36","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(therapist)\\therapists\\dashboard\\page.jsx":"37","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(therapist)\\therapists\\edit-profile\\page.jsx":"38","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\[name]\\schedule\\components\\Title.jsx":"39","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\[name]\\schedule\\enter-details\\page.jsx":"40","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\[name]\\schedule\\select-date\\page.jsx":"41","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\[name]\\schedule\\select-meet\\page.jsx":"42","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\dashboard\\Components\\LeftBar copy.jsx":"43","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\dashboard\\Components\\LeftBar.jsx":"44","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\register\\otp-verification\\page.jsx":"45","D:\\Work\\consciousleap\\ConsciousLeap\\app\\Context\\Context.js":"46","D:\\Work\\consciousleap\\ConsciousLeap\\app\\Context\\State.js":"47","D:\\Work\\consciousleap\\ConsciousLeap\\app\\Utils\\urls.js":"48"},{"size":310,"mtime":1696850365005,"results":"49","hashOfConfig":"50"},{"size":1043,"mtime":1697292415852,"results":"51","hashOfConfig":"50"},{"size":1749,"mtime":1696850365018,"results":"52","hashOfConfig":"50"},{"size":3210,"mtime":1696850365018,"results":"53","hashOfConfig":"50"},{"size":1968,"mtime":1697196680290,"results":"54","hashOfConfig":"50"},{"size":4126,"mtime":1696850365100,"results":"55","hashOfConfig":"50"},{"size":2651,"mtime":1696850365101,"results":"56","hashOfConfig":"50"},{"size":3110,"mtime":1696850365101,"results":"57","hashOfConfig":"50"},{"size":3191,"mtime":1696850365101,"results":"58","hashOfConfig":"50"},{"size":2418,"mtime":1696850365101,"results":"59","hashOfConfig":"50"},{"size":340,"mtime":1696850365101,"results":"60","hashOfConfig":"50"},{"size":341,"mtime":1696850365101,"results":"61","hashOfConfig":"50"},{"size":7517,"mtime":1696850365101,"results":"62","hashOfConfig":"50"},{"size":3280,"mtime":1696916264574,"results":"63","hashOfConfig":"50"},{"size":2516,"mtime":1696850365101,"results":"64","hashOfConfig":"50"},{"size":2805,"mtime":1696850365101,"results":"65","hashOfConfig":"50"},{"size":9262,"mtime":1696850365101,"results":"66","hashOfConfig":"50"},{"size":9661,"mtime":1697305316149,"results":"67","hashOfConfig":"50"},{"size":1675,"mtime":1697296062073,"results":"68","hashOfConfig":"50"},{"size":17309,"mtime":1697187478771,"results":"69","hashOfConfig":"50"},{"size":295,"mtime":1696867266554,"results":"70","hashOfConfig":"50"},{"size":1611,"mtime":1696918321424,"results":"71","hashOfConfig":"50"},{"size":3796,"mtime":1696850365179,"results":"72","hashOfConfig":"50"},{"size":1299,"mtime":1696850365179,"results":"73","hashOfConfig":"50"},{"size":2528,"mtime":1696850365179,"results":"74","hashOfConfig":"50"},{"size":11664,"mtime":1697345353584,"results":"75","hashOfConfig":"50"},{"size":5513,"mtime":1697568854519,"results":"76","hashOfConfig":"50"},{"size":5450,"mtime":1697312461749,"results":"77","hashOfConfig":"50"},{"size":3325,"mtime":1697312113154,"results":"78","hashOfConfig":"50"},{"size":3985,"mtime":1697346030858,"results":"79","hashOfConfig":"50"},{"size":4824,"mtime":1697347964374,"results":"80","hashOfConfig":"50"},{"size":251,"mtime":1697009237895,"results":"81","hashOfConfig":"50"},{"size":2918,"mtime":1697567763079,"results":"82","hashOfConfig":"50"},{"size":159,"mtime":1696871717479,"results":"83","hashOfConfig":"50"},{"size":472,"mtime":1697292972178,"results":"84","hashOfConfig":"50"},{"size":21957,"mtime":1697569986874,"results":"85","hashOfConfig":"50"},{"size":9760,"mtime":1697568249361,"results":"86","hashOfConfig":"50"},{"size":18301,"mtime":1697568268682,"results":"87","hashOfConfig":"50"},{"size":842,"mtime":1697179415006,"results":"88","hashOfConfig":"50"},{"size":2246,"mtime":1697184658427,"results":"89","hashOfConfig":"50"},{"size":3095,"mtime":1697196844798,"results":"90","hashOfConfig":"50"},{"size":1653,"mtime":1697196854986,"results":"91","hashOfConfig":"50"},{"size":1344,"mtime":1697305900069,"results":"92","hashOfConfig":"50"},{"size":1975,"mtime":1697311131335,"results":"93","hashOfConfig":"50"},{"size":2921,"mtime":1697305618234,"results":"94","hashOfConfig":"50"},{"size":105,"mtime":1697292876855,"results":"95","hashOfConfig":"50"},{"size":3484,"mtime":1697562617968,"results":"96","hashOfConfig":"50"},{"size":115,"mtime":1697570059935,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1co3nta",{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Authorized\\Captcha.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Carousel.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\CerifiedTherapist.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\ClientTestimonials.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\CommunicationChannels.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\ConsciousLeapBlog.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\ConsciousStore.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Drawer.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\GlobalPresence.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\HowItWorks.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Lines\\Line1.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Lines\\Line2.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\MemberStatistics.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\MembersTestimonials.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\MindfulTherapist.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\RegisterBlock.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Utils\\Footer.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\Utils\\Navbar.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\Components\\WhyConsciousLeap.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\expertise-area\\page.tsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\layout.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\page.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\questionnaire\\page.tsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapist-review\\page.jsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapist-review\\[name]\\page.tsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\register\\page.jsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\[name]\\page.jsx",["250"],[],"\"use client\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport image from \"../../Assets/sagrika.jpeg\";\r\n\r\nimport { BsCameraVideo } from \"react-icons/bs\";\r\nimport { BiMessageDots } from \"react-icons/bi\";\r\nimport { IoCallOutline } from \"react-icons/io5\";\r\nimport Context from \"@/Context/Context\";\r\n\r\nconst OneTherapist = ({ params }) => {\r\n  const history = useRouter();\r\n  let id = params.name;\r\n  const [user, setUser] = useState();\r\n  const { therapistFilter } = useContext(Context);\r\n\r\n  let topData = [\r\n    {\r\n      name: \"Experience\",\r\n      items: [\"2-5 Year\"],\r\n    },\r\n    {\r\n      name: \"Qualifications\",\r\n      items: [\r\n        \"M.A Counselling Psychology\",\r\n        \"APA Member\",\r\n        \"Certified NLP practitioner\",\r\n        \"Certified Relationship Coach\",\r\n      ],\r\n    },\r\n    {\r\n      name: \"Speaks\",\r\n      items: [\"Hindi\", \"English\"],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const therapist = therapistFilter?.therapistsData?.find(\r\n      (e) => e?._id == id\r\n    );\r\n    setUser(therapist);\r\n  }, [therapistFilter?.therapistsData]);\r\n\r\n  return (\r\n    <div className=\"flex py-[3vw] px-[10vw] md:py-[0.75vw] md:px-[8vw] justify-between\">\r\n      <div className=\"flex flex-col w-3/12 mr-[2vw]\">\r\n        <div className=\"rounded-full w-full bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[1px]\">\r\n          <div className=\"flex items-start py-[3vw] px-[4vw] md:p-[5px] h-full w-full rounded-full justify-between bg-white\">\r\n            <Image\r\n              src={user?.photo}\r\n              alt=\"User profile\"\r\n              width={1000}\r\n              height={1000}\r\n              className=\"w-full h-[19vw] object-cover object-center rounded-full\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <h1 className=\"text-websiteBlue text-xl text-center mt-4\">\r\n          {user?.name}\r\n        </h1>\r\n        <p className=\"text-center text-sm text-darkGrey\">{user?.desc}</p>\r\n        <div className=\"flex justify-center items-center mt-5\">\r\n          <BsCameraVideo\r\n            className=\"text-websiteBlue border-websiteBlue p-1.5 border-2 mr-3 rounded-full hover:scale-110 cursor-pointer transition-all\"\r\n            size={40}\r\n          />\r\n          <IoCallOutline\r\n            className=\"text-pinkishRed border-pinkishRed p-1.5 border-2 mr-3 rounded-full hover:scale-110 cursor-pointer transition-all\"\r\n            size={40}\r\n          />\r\n          <BiMessageDots\r\n            size={40}\r\n            className=\"text-oceanGreen border-oceanGreen p-1.5 border-2 mr-3 rounded-full hover:scale-110 cursor-pointer transition-all\"\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={(e) => {\r\n            history.push(\"/therapists/sagrika/schedule/select-meet\");\r\n          }}\r\n          className=\"bg-websiteBlue px-9 text-sm mt-7 py-2 rounded-lg text-white mx-auto block\"\r\n        >\r\n          Schedule Session\r\n        </button>\r\n      </div>\r\n      <div className=\"w-9/12 flex flex-col\">\r\n        <div className=\"grid grid-cols-3 gap-5 w-full\">\r\n          <div>\r\n            {<Table data={{ name: \"Experience\", items: [user?.experience] }} />}\r\n          </div>\r\n          <div>\r\n            {\r\n              <Table\r\n                data={{ name: \"Qualifications\", items: user?.qualifications }}\r\n              />\r\n            }\r\n          </div>\r\n          <div>{<Table data={{ name: \"Speaks\", items: user?.speaks }} />}</div>\r\n        </div>\r\n        <div>\r\n          <h1 className=\"text-websiteBlue text-2xl font-light mt-[5vh]\">\r\n            Expertise\r\n          </h1>\r\n          <div className=\"grid grid-cols-3 gap-5 mt-4\">\r\n            {user?.expertise?.map((e, i) => {\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  className=\"cursor-pointer rounded-xl w-full bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[2px]\"\r\n                >\r\n                  <div className=\"py-[3vw] text-center px-[4vw] text-darkGrey font-light mobile:py-2 md:px-6 h-full w-full rounded-xl flex items-center justify-center bg-white\">\r\n                    {e}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h1 className=\"text-websiteBlue text-2xl mt-[5vh] font-light\">\r\n            About the Therapist\r\n          </h1>\r\n          <p className=\"text-darkGrey text-sm tracking-wider\">{user?.about}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ data }) => {\r\n  return (\r\n    <div className=\"rounded-lg w-full h-fit bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[2px]\">\r\n      <div className=\"h-full w-full rounded-lg items-center justify-center bg-white flex flex-col\">\r\n        <div className=\"w-full bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen pb-[2px]\">\r\n          <div className=\"h-full w-full items-center justify-center bg-white flex flex-col rounded-tl-lg rounded-tr-lg\">\r\n            <h1 className=\"text-websiteBlue text-xl font-light my-1.5\">\r\n              {data?.name}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"py-3\">\r\n          {data?.items?.map((e) => {\r\n            return (\r\n              <li className=\"font-light\" key={e}>\r\n                {e}\r\n              </li>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OneTherapist;\r\n","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\dashboard\\edit\\page.jsx",["251"],[],"\"use client\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport LeftBar from \"../Components/LeftBar\";\r\nimport RightBar from \"../Components/LeftBar copy\";\r\nimport Context from \"@/Context/Context\";\r\nimport { getCookie } from \"cookies-next\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"@/Utils/urls\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst DashboardEdit = () => {\r\n  const history = useRouter();\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n  const { login, getUser } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    setUser({\r\n      name: login?.name,\r\n      phone: login?.phone,\r\n      email: login?.email,\r\n    });\r\n  }, []);\r\n\r\n  const onUpdate = () => {\r\n    let token = getCookie(\"token\");\r\n    axios\r\n      .post(`${BASE_URL}/login/update-user`, { ...user, token })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          getUser();\r\n          toast.success(\"Details updated successfully\");\r\n          setTimeout(() => {\r\n            history.push(\"/user/dashboard\");\r\n          }, 300);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-[#eee] px-[5vw] flex justify-between items-start py-[2vw]\">\r\n        <LeftBar />\r\n        <Toaster />\r\n        <div className=\"w-6/12 px-[2vw]\">\r\n          <h1 className=\"text-darkGrey tracking-wide text-lg hover:text-websiteBlue transition-all cursor-pointer\">\r\n            Manage Profile\r\n          </h1>\r\n          <div className=\"bg-white w-full shadow-lg shadow-lightGrey mt-4 p-3\">\r\n            <h1 className=\"text-darkGrey border-b pb-2 border-b-lightGrey tracking-wide text-lg hover:text-websiteBlue transition-all cursor-pointer\">\r\n              Personal Information\r\n            </h1>\r\n            <div className=\"mt-4\">\r\n              {[\r\n                {\r\n                  title: \"Your Name\",\r\n                  value: user.name,\r\n                  onchange: (e) => {\r\n                    setUser({ ...user, name: e.target.value });\r\n                  },\r\n                },\r\n                {\r\n                  title: \"Your Phone\",\r\n                  value: user.phone,\r\n                  onchange: (e) => {\r\n                    setUser({ ...user, phone: e.target.value });\r\n                  },\r\n                },\r\n                {\r\n                  title: \"Your Email\",\r\n                  value: user.email,\r\n                  onchange: (e) => {\r\n                    setUser({ ...user, email: e.target.value });\r\n                  },\r\n                },\r\n                {\r\n                  title: \"Your Photo\",\r\n                  value: user.name,\r\n                  onchange: (e) => {\r\n                    setUser({ ...user, name: e.target.value });\r\n                  },\r\n                },\r\n              ].map((e, i) => {\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className=\"items-center grid mb-2\"\r\n                    style={{ gridTemplateColumns: \"20% 80%\" }}\r\n                  >\r\n                    <p className=\"font-light text-darkGrey text-sm\">\r\n                      {e.title}\r\n                    </p>\r\n                    {e?.title?.includes(\"Photo\") ? (\r\n                      <input\r\n                        type=\"file\"\r\n                        class=\"relative m-0 block w-full min-w-0 flex-auto rounded border border-solid border-neutral-300 bg-clip-padding px-3 py-[0.32rem] text-base font-normal text-websiteBlue transition duration-300 ease-in-out file:-mx-3 file:-my-[0.32rem] file:overflow-hidden file:rounded-none file:border-0 file:border-solid file:border-inherit file:bg-neutral-100 file:px-3 file:py-[0.32rem] file:text-websiteBlue file:transition file:duration-150 file:ease-in-out file:[border-inline-end-width:1px] file:[margin-inline-end:0.75rem] hover:file:bg-neutral-200 focus:border-primary focus:text-websiteBlue focus:shadow-te-primary focus:outline-none dark:border-neutral-600 dark:text-neutral-200 dark:file:bg-websiteBlue dark:file:text-neutral-100 dark:focus:border-primary\"\r\n                      />\r\n                    ) : (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={e?.value}\r\n                        onChange={e?.onchange}\r\n                        className=\"border block outline-none mb-2 border-lightGrey px-3 py-1.5 rounded-md\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              onClick={onUpdate}\r\n              className=\"bg-websiteBlue px-5 py-1.5 text-white mt-6 rounded-md\"\r\n            >\r\n              Update Profile\r\n            </button>\r\n          </div>\r\n          {/* <div className=\"bg-white w-full shadow-lg shadow-lightGrey mt-4 p-3\">\r\n            <h1 className=\"text-darkGrey border-b pb-2 border-b-lightGrey tracking-wide text-lg hover:text-websiteBlue transition-all cursor-pointer\">\r\n              Address\r\n            </h1>\r\n            <div className=\"mt-5\">\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n        <RightBar />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardEdit;\r\n","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\dashboard\\page.jsx",["252"],[],"\"use client\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport Image from \"next/image\";\r\nimport therapistReview from \"../../Assets/therapist-review.png\";\r\nimport scheduleAppointment from \"../../Assets/schedule-a-session.png\";\r\nimport findNewTherapist from \"../../Assets/find-the-therapist.png\";\r\n\r\nimport rain from \"../../Assets/modes/rain.png\";\r\nimport sunshine from \"../../Assets/modes/sunshine.png\";\r\nimport lighteing from \"../../Assets/modes/lighteing.png\";\r\nimport cloudy from \"../../Assets/modes/cloudy.png\";\r\n\r\nimport bg from \"../../Assets/top-background2.png\";\r\nimport logoPng from \"../../Assets/logoPng.png\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport LeftBar from \"./Components/LeftBar\";\r\nimport RightBar from \"./Components/LeftBar copy\";\r\nimport { getCookie } from \"cookies-next\";\r\nimport Context from \"@/Context/Context\";\r\n\r\nconst Dashboard = () => {\r\n  const history = useRouter();\r\n  let { login, isLogin } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n      history.push(\"/user/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-[#eee] px-[5vw] flex justify-between items-start py-[2vw]\">\r\n        <LeftBar />\r\n        <div className=\"w-6/12 px-[2vw]\">\r\n          {\" \"}\r\n          <div className=\"relative mb-6\">\r\n            <Image src={bg} alt=\"Background\" />\r\n            <div className=\"flex px-[2vw] justify-between items-center h-full absolute top-0 left-0\">\r\n              <h1 className=\"text-2xl text-white font-light\">\r\n                Hi {login?.name}, Welcome to #oneness\r\n              </h1>\r\n              <Image src={logoPng} alt=\"Logo png\" className=\"w-[20%]\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-between items-center\">\r\n            {[\r\n              { image: therapistReview, route: \"/therapist-review\" },\r\n              { image: scheduleAppointment, route: \"\" },\r\n              { image: findNewTherapist, route: \"/therapists\" },\r\n            ].map((e, i) => {\r\n              return (\r\n                <div\r\n                  className=\"cursor-pointer bg-white w-[32%] p-[2.5vw] h-[8vw] flex justify-center items-center rounded-3xl\"\r\n                  key={i}\r\n                >\r\n                  <Image\r\n                    src={e?.image}\r\n                    alt={e?.image?.src}\r\n                    onClick={(event) => {\r\n                      history.push(e?.route);\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"bg-white rounded-3xl mt-6 p-4\">\r\n            <h1 className=\"text-websiteBlue font-light text-center\">\r\n              Feeling Check\r\n            </h1>\r\n            <div className=\"grid grid-cols-4 gap-5 mt-5\">\r\n              {[rain, sunshine, cloudy, lighteing].map((e) => {\r\n                return (\r\n                  <Image\r\n                    src={e}\r\n                    alt={e?.src}\r\n                    key={e?.src}\r\n                    className=\"hover:scale-90 transition-all cursor-pointer\"\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <RightBar />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\login\\page.jsx",["253"],[],"\"use client\";\r\nimport React, { useContext, useRef, useState, useEffect } from \"react\";\r\nimport Captcha from \"../../Components/Authorized/Captcha\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport axios from \"axios\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { BASE_URL } from \"@/Utils/urls\";\r\nimport { setCookie } from \"cookies-next\";\r\nimport Context from \"@/Context/Context\";\r\n\r\nconst UserLogin = () => {\r\n  const captchaRef = useRef(null);\r\n  let { isLogin } = useContext(Context);\r\n  const history = useRouter();\r\n  const router = useRouter();\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isLogin) {\r\n      history.push(\"/user/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  const onLogin = () => {\r\n    if (!(!user?.email || !user?.password)) {\r\n      axios\r\n        .post(`${BASE_URL}/login/signin`, user)\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            toast.success(\"Login successfully\");\r\n            setTimeout(() => {\r\n              let token = response.data.jwtToken;\r\n              if (response.data.user == \"Therapist\") {\r\n                router.push(\"/therapists/dashboard\");\r\n                setCookie(\"therapist_token\", token);\r\n              } else if (response.data.user == \"User\") {\r\n                router.push(\"/\");\r\n                setCookie(\"token\", token);\r\n              }\r\n              setUser({\r\n                email: \"\",\r\n                password: \"\",\r\n              });\r\n            }, 500);\r\n          } else {\r\n            toast.error(response.data.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          toast.error(err.message);\r\n        });\r\n    } else {\r\n      toast.error(\"Please fill all the details\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-10\">\r\n      <Toaster />\r\n      <div className=\"rounded-xl w-[90vw] md:w-[30vw] mx-auto bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[2px]\">\r\n        <div className=\"flex flex-col py-[3vw] px-[4vw] md:px-[1.5vw] md:py-[1.5vw] h-full w-full rounded-xl items-center justify-center bg-white\">\r\n          <h1 className=\"mb-7 text-websiteBlue text-3xl font-semibold\">\r\n            Login\r\n          </h1>\r\n          <input\r\n            type=\"text\"\r\n            value={user?.email}\r\n            onChange={(e) => {\r\n              setUser({ ...user, email: e.target.value });\r\n            }}\r\n            className=\"w-full border px-3 py-1.5 outline-none rounded-md mb-4\"\r\n            placeholder=\"Email\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={user?.password}\r\n            onChange={(e) => {\r\n              setUser({ ...user, password: e.target.value });\r\n            }}\r\n            className=\"w-full border px-3 py-1.5 outline-none rounded-md\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <div className=\"flex justify-between w-full items-center p-2 text-websiteBlue text-sm opacity-50\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"mr-1 cursor-pointer\"\r\n                id=\"remember\"\r\n              />\r\n              <label htmlFor=\"remember\" className=\"cursor-pointer\">\r\n                Remember Me\r\n              </label>\r\n            </div>\r\n            <p>Forgot Password?</p>\r\n          </div>\r\n          <Captcha captchaRef={captchaRef} />\r\n          <button\r\n            onClick={onLogin}\r\n            className=\"bg-websiteBlue text-white px-7 font-semibold py-1.5 rounded-lg\"\r\n          >\r\n            Login\r\n          </button>\r\n          <p\r\n            onClick={(e) => {\r\n              history.push(\"/user/register\");\r\n            }}\r\n            className=\"text-websiteBlue mt-[5vw] md:mt-[2vw] text-sm cursor-pointer\"\r\n          >\r\n            New to consciousleap?\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\register\\page.jsx",["254"],[],"\"use client\";\r\nimport React, { useRef, useState, useContext, useEffect } from \"react\";\r\nimport Captcha from \"../../Components/Authorized/Captcha\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"@/Utils/urls\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport Context from \"@/Context/Context\";\r\nimport { getCookie } from \"cookies-next\";\r\n\r\nconst UserRegister = () => {\r\n  const { user, setUser } = useContext(Context);\r\n  const [termsPolicies, setTermsPolicies] = useState(false);\r\n  const captchaRef = useRef(null);\r\n  const history = useRouter();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    let token = getCookie(\"token\");\r\n    if (token) {\r\n      history.push(\"/user/dashboard\");\r\n    }\r\n  }, []);\r\n\r\n  const onSignUp = (e) => {\r\n    e.preventDefault();\r\n    if (termsPolicies) {\r\n      if (!(!user?.name || !user?.email || !user?.password || !user?.phone)) {\r\n        axios\r\n          .post(`${BASE_URL}/login/otp-verification`, user)\r\n          .then((response) => {\r\n            if (response.status == 200) {\r\n              toast.success(response.data.data);\r\n              setUser({ ...user, original: response.data.otp });\r\n              setTimeout(() => {\r\n                router.push(\"/user/register/otp-verification\");\r\n              }, 600);\r\n            } else {\r\n              toast.error(response.data.data);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            toast.error(err.message);\r\n          });\r\n      } else {\r\n        toast.error(\"Please fill all the details\");\r\n      }\r\n    } else {\r\n      toast.error(\"Please accept the terms and policies\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-10\">\r\n      <Toaster />\r\n      <div className=\"rounded-xl w-[90vw] md:w-[30vw] mx-auto bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[2px]\">\r\n        <div className=\"flex flex-col py-[3vw] px-[4vw] md:px-[1.5vw] md:py-[1.5vw] h-full w-full rounded-xl items-center justify-center bg-white\">\r\n          <h1 className=\"mb-7 text-websiteBlue text-3xl font-semibold\">\r\n            Register\r\n          </h1>\r\n          <input\r\n            value={user?.name}\r\n            onChange={(e) => {\r\n              setUser({ ...user, name: e.target.value });\r\n            }}\r\n            type=\"text\"\r\n            className=\"w-full border px-3 py-1.5 outline-none rounded-md mb-4\"\r\n            placeholder=\"Name\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={user?.email}\r\n            onChange={(e) => {\r\n              setUser({ ...user, email: e.target.value });\r\n            }}\r\n            className=\"w-full border px-3 py-1.5 outline-none rounded-md mb-4\"\r\n            placeholder=\"Email\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={user?.phone}\r\n            onChange={(e) => {\r\n              setUser({ ...user, phone: e.target.value });\r\n            }}\r\n            className=\"w-full border px-3 py-1.5 outline-none rounded-md mb-4\"\r\n            placeholder=\"Phone with Country Code\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={user?.password}\r\n            onChange={(e) => {\r\n              setUser({ ...user, password: e.target.value });\r\n            }}\r\n            className=\"w-full border px-3 mb-1 py-1.5 outline-none rounded-md\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <Captcha captchaRef={captchaRef} />\r\n          <div className=\"flex justify-between w-full items-center pb-4 px-2 text-websiteBlue text-sm opacity-50\">\r\n            <div className=\"flex items-start\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"check\"\r\n                id=\"check\"\r\n                className=\"mr-1 mt-1\"\r\n                value={termsPolicies}\r\n                onChange={(e) => {\r\n                  setTermsPolicies(!termsPolicies);\r\n                }}\r\n              />\r\n              <label\r\n                htmlFor=\"check\"\r\n                className=\"w-10/12 cursor-pointer text-darkGrey\"\r\n              >\r\n                By Signing-up to consciousleap, you agree to our Terms of\r\n                Service and Privacy Policy.\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={onSignUp}\r\n            className=\"bg-websiteBlue text-white px-7 font-semibold py-1.5 rounded-lg\"\r\n          >\r\n            Get Otp\r\n          </button>\r\n          <p\r\n            onClick={(e) => {\r\n              history.push(\"/user/login\");\r\n            }}\r\n            className=\"text-websiteBlue mt-[5vw] md:mt-[2vw] text-sm cursor-pointer\"\r\n          >\r\n            Login to consciousleap\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserRegister;\r\n","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(therapist)\\Components\\Utils\\Footer.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(therapist)\\Components\\Utils\\Navbar.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(therapist)\\layout.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\layout.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\page.jsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(therapist)\\therapists\\dashboard\\page.jsx",["255"],[],"\"use client\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\n\r\nimport Navbar from \"../../Components/Utils/Navbar\";\r\nimport Footer from \"../../Components/Utils/Footer\";\r\nimport image from \"../../../(main)/Assets/top-background2.png\";\r\nimport ideas from \"../../../(main)/Assets/ideas.jpg\";\r\nimport books from \"../../../(main)/Assets/book.png\";\r\n\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport img1 from \"../../../(main)/Assets/therapists/my_client.png\";\r\nimport img2 from \"../../../(main)/Assets/therapists/my_earning.png\";\r\nimport img3 from \"../../../(main)/Assets/therapists/therapist_notes.png\";\r\n\r\nimport sunrise from \"@/(main)/Assets/therapists/positive_vibes.png\";\r\nimport calmness from \"@/(main)/Assets/therapists/calmness.png\";\r\nimport knowledge from \"@/(main)/Assets/therapists/knowledge.png\";\r\n\r\nimport logoPng from \"@/(main)/Assets/logoPng.png\";\r\n\r\nimport finishing from \"@/(main)/Assets/Therapy/finishing.png\";\r\nimport schedule from \"@/(main)/Assets/Therapy/shedule.png\";\r\nimport takingBreak from \"@/(main)/Assets/Therapy/taking_break.png\";\r\n\r\nimport logo from \"@/(main)/Assets/logo.png\";\r\n\r\nimport { Checkbox } from \"@material-tailwind/react\";\r\n\r\nimport sagrika from \"@/(main)/Assets/sagrika.jpeg\";\r\n\r\nimport { AiOutlineHome } from \"react-icons/ai\";\r\nimport { CiSettings } from \"react-icons/ci\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Context from \"@/Context/Context\";\r\nimport { getCookie } from \"cookies-next\";\r\n\r\nconst Dashboard = () => {\r\n  const [dateState, setDate] = useState(new Date());\r\n  const [showLeftBar, setShowLeftBar] = useState(true);\r\n  const router = useRouter();\r\n  const { therapists } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    if (getCookie(\"therapist_token\")?.length <= 1) {\r\n      router.push(\"/user/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex \">\r\n      <div\r\n        className={`${\r\n          showLeftBar ? \"w-2/12\" : \"w-0 hidden\"\r\n        } border border-gray-300 h-[100vh] fixed top-0 left-0 bg-veryLightGrey py-4 px-3 flex flex-col items-center`}\r\n      >\r\n        <Image src={logo} alt=\"Logo\" />\r\n        <Image\r\n          src={therapists?.therapist?.photo}\r\n          alt=\"Image\"\r\n          width={1000}\r\n          height={1000}\r\n          className=\"w-[11.5vw] h-[11.5vw] object-cover object-center rounded-full mt-[4vw]\"\r\n        />\r\n        <div className=\"flex flex-col items-center\">\r\n          <p className=\"mt-1 text-lg\">{therapists?.therapist?.name}</p>\r\n          <p className=\"text-sm text-gray-700 break-words w-[13vw] text-center\">\r\n            {therapists?.therapist?.email}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <div\r\n            onClick={(e) => {\r\n              router.push(\"/therapists/dashboard\");\r\n            }}\r\n            className=\"rounded-lg w-full bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[1.5px] mt-3\"\r\n          >\r\n            <div className=\"bg-veryLightGrey flex font-medium cursor-pointer justify-between items-center rounded-lg px-[2vw] py-2\">\r\n              <AiOutlineHome size={25} className=\"mr-3\" />\r\n              Dashboard\r\n            </div>\r\n          </div>\r\n          <div\r\n            onClick={(e) => {\r\n              router.push(\"/therapists/edit-profile\");\r\n            }}\r\n            className=\"rounded-lg w-full bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[1.5px] mt-3\"\r\n          >\r\n            <div className=\"bg-veryLightGrey flex font-medium cursor-pointer justify-between items-center rounded-lg px-[2vw] py-2\">\r\n              <CiSettings size={25} className=\"mr-3\" />\r\n              Edit Profile\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`${showLeftBar ? \"w-10/12 ml-[16.6%]\" : \"w-full\"}`}>\r\n        <Navbar showLeftBar={showLeftBar} setShowLeftBar={setShowLeftBar} />\r\n        <div className=\"bg-veryLightGrey px-[1.5vw] flex items-start justify-between py-[3vw]\">\r\n          <div className=\"w-9/12 pr-[2vw]\">\r\n            <div className=\"relative h-[25vh] w-full rounded-[3vw]\">\r\n              <Image\r\n                src={image}\r\n                alt=\"Image\"\r\n                className=\"h-full w-full rounded-[3vw] object-cover object-center\"\r\n              />\r\n              <div className=\"absolute top-0 left-0 w-full flex justify-between items-center h-full px-[4vw] text-white\">\r\n                <p className=\"text-2xl font-light\">\r\n                  Hello {therapists?.therapist?.name}, Welcome to Wellbeing!\r\n                </p>\r\n                <Image src={logoPng} alt=\"Circle\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-3 justify-between w-full py-[1vw]\">\r\n              <Image\r\n                src={img3}\r\n                alt=\"Image 1\"\r\n                className=\"hover:scale-105 transition-all cursor-pointer\"\r\n              />\r\n              <Image\r\n                src={img1}\r\n                alt=\"Image 1\"\r\n                className=\"hover:scale-105 transition-all cursor-pointer\"\r\n              />\r\n              <Image\r\n                src={img2}\r\n                alt=\"Image 1\"\r\n                className=\"hover:scale-105 transition-all cursor-pointer\"\r\n              />\r\n            </div>\r\n            <div className=\"flex items-center justify-between px-[0.7vw]\">\r\n              <div className=\"w-[48.5%] bg-white rounded-3xl p-[1vw]\">\r\n                <h1 className=\"text-center text-websiteBlue text-[19px] font-medium\">\r\n                  My Reviews\r\n                </h1>\r\n                <div>\r\n                  {[\r\n                    { image: sunrise, text: \"Positive Vibes\", value: 100 },\r\n                    { image: calmness, text: \"Calmness\", value: 100 },\r\n                    { image: knowledge, text: \"Knowledge\", value: 100 },\r\n                  ].map((e, i) => {\r\n                    return <ReviewBlock key={i} data={e} />;\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <div className=\"w-[48.5%] bg-white rounded-3xl p-[1vw]\">\r\n                <h1 className=\"text-center text-websiteBlue text-[19px] font-light\">\r\n                  Tasks for the day\r\n                </h1>\r\n                <div>\r\n                  {[\r\n                    { image: schedule, text: \"Scheduled Sessions\", value: 100 },\r\n                    { image: finishing, text: \"Finishing Notes\", value: 100 },\r\n                    { image: takingBreak, text: \"Taking a Break\", value: 100 },\r\n                  ].map((e, i) => {\r\n                    return <TaskBlock key={i} data={e} />;\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-3/12\">\r\n            <div className=\"bg-white p-5 rounded-lg\">\r\n              <div className=\"rounded-lg w-full h-full bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[2px]\">\r\n                <div className=\"h-full w-full rounded-lg p-[1vw] items-center justify-center bg-white flex flex-col\">\r\n                  <h1 className=\"text-websiteBlue text-xl font-semibold\">\r\n                    Calender\r\n                  </h1>\r\n                  <Calendar\r\n                    value={dateState}\r\n                    onChange={(e) => {\r\n                      setDate(e);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"shadow-lg py-2 px-3 border bg-white rounded-lg shadow-lightGrey mt-[1vw] mx-auto\">\r\n              <h1 className=\"text-center text-sm text-lightGrey\">\r\n                Recommanded Reads\r\n              </h1>\r\n              <Image\r\n                src={ideas}\r\n                alt=\"Idea image\"\r\n                className=\"w-8/12 mx-auto my-4\"\r\n              />\r\n              <div className=\"h-[2px] my-5 bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen\"></div>\r\n              <h1 className=\"text-center text-sm text-lightGrey\">\r\n                conscious Store\r\n              </h1>\r\n              <Image\r\n                src={books}\r\n                alt=\"Idea image\"\r\n                className=\"w-8/12 mx-auto my-4\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ReviewBlock = ({ data }) => {\r\n  return (\r\n    <div className=\"bg-veryLightGrey flex justify-between items-center rounded-xl px-[2vw] py-2 mt-3\">\r\n      <Image\r\n        src={data?.image}\r\n        alt=\"Sun rise\"\r\n        className={`${\r\n          data?.image?.src?.includes(\"calm\")\r\n            ? \"w-[5vw]\"\r\n            : data?.image?.src?.includes(\"know\")\r\n            ? \"w-[4vw]\"\r\n            : \"w-[6vw]\"\r\n        }`}\r\n      />\r\n      <p className=\"text-websiteBlue text-lg\">{data?.text}</p>\r\n      <div className=\"text-websiteBlue bg-white border-4 flex justify-center items-center text-xs rounded-full font-semibold h-[3.75vw] w-[3.75vw] border-oceanGreen\">\r\n        {data?.value}%\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TaskBlock = ({ data }) => {\r\n  return (\r\n    <div className=\"rounded-full w-full bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[1.5px] mt-3\">\r\n      <div className=\"bg-veryLightGrey flex justify-between items-center rounded-full px-[2vw] py-2\">\r\n        <Image src={data?.image} alt=\"Sun rise\" className=\"w-[3vw]\" />\r\n        <p className=\"text-websiteBlue text-lg\">{data?.text}</p>\r\n        <div className=\"text-oceanGreen\">\r\n          <input\r\n            type=\"checkbox\"\r\n            class=\"bg-red-100 border-red-300 text-red-500 focus:ring-red-200\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(therapist)\\therapists\\edit-profile\\page.jsx",["256"],[],"\"use client\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\n\r\nimport Navbar from \"../../Components/Utils/Navbar\";\r\nimport Footer from \"../../Components/Utils/Footer\";\r\n\r\nimport logo from \"@/(main)/Assets/logo.png\";\r\n\r\nimport sagrika from \"@/(main)/Assets/sagrika.jpeg\";\r\n\r\nimport { AiOutlineClose, AiOutlineHome } from \"react-icons/ai\";\r\nimport { CiSettings } from \"react-icons/ci\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport Context from \"@/Context/Context\";\r\nimport axios from \"axios\";\r\nimport { getCookie } from \"cookies-next\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { BASE_URL } from \"@/Utils/urls\";\r\n\r\nconst EditProfile = () => {\r\n  const [showLeftBar, setShowLeftBar] = useState(true);\r\n  const router = useRouter();\r\n  const { therapists } = useContext(Context);\r\n  const [experties, setExperties] = useState();\r\n  const [speaks, setSpeaks] = useState(\"\");\r\n  const [qualifications, setQualifications] = useState(\"\");\r\n  const [therapist, setTherapist] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    desc: \"\",\r\n    experience: \"\",\r\n    expertise: [],\r\n    qualifications: [],\r\n    speaks: [],\r\n    about: \"\",\r\n    photo: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const { therapist } = therapists;\r\n    setTherapist({\r\n      name: therapist?.name,\r\n      phone: therapist?.phone,\r\n      email: therapist?.email,\r\n      desc: therapist?.desc,\r\n      experience: therapist?.experience,\r\n      expertise: therapist?.expertise,\r\n      qualifications: therapist?.qualifications,\r\n      speaks: therapist?.speaks,\r\n      about: therapist?.about,\r\n      photo: therapist?.photo,\r\n    });\r\n  }, []);\r\n\r\n  const onUpdate = () => {\r\n    axios\r\n      .post(`${BASE_URL}/therapist/update-therapist`, {\r\n        ...therapist,\r\n        token: getCookie(\"therapist_token\"),\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status == 200) {\r\n          toast.success(\"Details updated successfully\");\r\n          therapists.getTherapist();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex \">\r\n      <Toaster />\r\n      <div\r\n        className={`${\r\n          showLeftBar ? \"w-2/12\" : \"w-0 hidden\"\r\n        } border border-gray-300 h-[100vh] fixed top-0 left-0 bg-veryLightGrey py-4 px-3 flex flex-col items-center`}\r\n      >\r\n        <Image src={logo} alt=\"Logo\" />\r\n        <Image\r\n          src={therapist?.photo}\r\n          alt=\"Image\"\r\n          width={1000}\r\n          height={1000}\r\n          className=\"w-[11.5vw] h-[11.5vw] object-cover object-center rounded-full mt-[4vw]\"\r\n        />\r\n        <div className=\"flex flex-col items-center\">\r\n          <p className=\"mt-1 text-lg\">{therapists?.therapist?.name}</p>\r\n          <p className=\"text-sm text-gray-700 break-words w-[13vw] text-center\">\r\n            {therapists?.therapist?.email}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <div\r\n            onClick={(e) => {\r\n              router.push(\"/therapists/dashboard\");\r\n            }}\r\n            className=\"rounded-lg w-full bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[1.5px] mt-3\"\r\n          >\r\n            <div className=\"bg-veryLightGrey flex font-medium cursor-pointer justify-between items-center rounded-lg px-[2vw] py-2\">\r\n              <AiOutlineHome size={25} className=\"mr-3\" />\r\n              Dashboard\r\n            </div>\r\n          </div>\r\n          <div\r\n            onClick={(e) => {\r\n              router.push(\"/therapists/edit-profile\");\r\n            }}\r\n            className=\"rounded-lg w-full bg-gradient-to-r from-websiteBlue via-pinkishRed to-oceanGreen p-[1.5px] mt-3\"\r\n          >\r\n            <div className=\"bg-veryLightGrey flex font-medium cursor-pointer justify-between items-center rounded-lg px-[2vw] py-2\">\r\n              <CiSettings size={25} className=\"mr-3\" />\r\n              Edit Profile\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`${showLeftBar ? \"w-10/12 ml-[16.6%]\" : \"w-full\"}`}>\r\n        <Navbar showLeftBar={showLeftBar} setShowLeftBar={setShowLeftBar} />\r\n        <div className=\"px-[1.5vw] py-[3vw]\">\r\n          <h1 className=\"text-lg\">\r\n            Therapists settings{\" \"}\r\n            <Link\r\n              href={`/therapists/${therapists?.therapist?._id}`}\r\n              target=\"_blank\"\r\n            >\r\n              <span className=\"text-base text-gray-500 hover:underline transition-all cursor-pointer\">\r\n                (Visit Profile)\r\n              </span>\r\n            </Link>\r\n          </h1>\r\n          <div className=\"px-3\">\r\n            <div\r\n              className=\"grid py-5 items-center\"\r\n              style={{ gridTemplateColumns: \"15% 85%\" }}\r\n            >\r\n              <p className=\"font-light text-[14px]\">Therapist Name *</p>\r\n              <input\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                value={therapist?.name}\r\n                onChange={(e) => {\r\n                  setTherapist({ ...therapist, name: e.target.value });\r\n                }}\r\n                className=\"border outline-none text-gray-600 rounded-md px-4 py-1\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"grid items-center\"\r\n              style={{ gridTemplateColumns: \"15% 85%\" }}\r\n            >\r\n              <p className=\"font-light text-[14px]\">\r\n                Therapist Profile Picture\r\n              </p>\r\n              <input\r\n                className=\"block w-full text-sm text-gray-900 border border-gray-300 cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\"\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  const formData = new FormData();\r\n                  formData.append(\"file\", e.target.files[0]);\r\n                  formData.append(\"upload_preset\", \"upload_photo\");\r\n                  formData.append(\"cloud_name\", \"dfk09gblw\");\r\n\r\n                  console.log(formData);\r\n\r\n                  fetch(\r\n                    \"https://api.Cloudinary.com/v1_1/dfk09gblw/image/upload\",\r\n                    {\r\n                      method: \"POST\",\r\n                      body: formData,\r\n                    }\r\n                  )\r\n                    .then((res) => res.json())\r\n                    .then((res) => {\r\n                      setTherapist({ ...therapist, photo: res.url });\r\n                    })\r\n                    .catch((err) => {});\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"grid pt-5 items-center\"\r\n              style={{ gridTemplateColumns: \"15% 85%\" }}\r\n            >\r\n              <p className=\"font-light text-[14px]\">Therapist Phone</p>\r\n              <input\r\n                type=\"text\"\r\n                value={therapist?.phone}\r\n                placeholder=\"Phone\"\r\n                onChange={(e) => {\r\n                  setTherapist({ ...therapist, phone: e.target.value });\r\n                }}\r\n                className=\"border outline-none text-gray-600 rounded-md px-4 py-1\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"grid pt-5 items-center\"\r\n              style={{ gridTemplateColumns: \"15% 85%\" }}\r\n            >\r\n              <p className=\"font-light text-[14px]\">Short Description *</p>\r\n              <input\r\n                type=\"text\"\r\n                value={therapist?.desc}\r\n                placeholder=\"Short description\"\r\n                onChange={(e) => {\r\n                  setTherapist({ ...therapist, desc: e.target.value });\r\n                }}\r\n                className=\"border outline-none text-gray-600 rounded-md px-4 py-1\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"grid pt-5 items-center\"\r\n              style={{ gridTemplateColumns: \"15% 85%\" }}\r\n            >\r\n              <p className=\"font-light text-[14px]\">Experience *</p>\r\n              <input\r\n                type=\"text\"\r\n                value={therapist?.experience}\r\n                placeholder=\"Experience\"\r\n                onChange={(e) => {\r\n                  setTherapist({ ...therapist, experience: e.target.value });\r\n                }}\r\n                className=\"border outline-none text-gray-600 rounded-md px-4 py-1\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"grid pt-5 items-start\"\r\n              style={{ gridTemplateColumns: \"15% 85%\" }}\r\n            >\r\n              <p className=\"font-light text-[14px]\">Expertise *</p>\r\n              <div>\r\n                {therapist?.expertise?.map((e, i) => {\r\n                  return (\r\n                    <div className=\"flex items-center w-full mb-4\" key={i}>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={e}\r\n                        onChange={(val) => {\r\n                          let updatedExpertise = therapist.expertise;\r\n                          let index = updatedExpertise.indexOf(e);\r\n                          updatedExpertise[index] = val.target.value;\r\n                          setTherapist({\r\n                            ...therapist,\r\n                            expertise: updatedExpertise,\r\n                          });\r\n                        }}\r\n                        className=\"border outline-none text-gray-600 w-full rounded-md px-4 py-1\"\r\n                      />\r\n                      <div className=\"pl-4\">\r\n                        <AiOutlineClose\r\n                          className=\"bg-lightRed p-2 rounded-full text-red-500 hover:bg-red-500 hover:text-white transition-all cursor-pointer\"\r\n                          size={35}\r\n                          onClick={(event) => {\r\n                            let updatedExpertise = therapist?.expertise;\r\n                            let pos = updatedExpertise.indexOf(e);\r\n                            updatedExpertise.splice(pos, 1);\r\n                            setTherapist({\r\n                              ...therapist,\r\n                              expertise: updatedExpertise,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div className=\"flex items-center w-full mb-4\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={experties}\r\n                    placeholder=\"Experties\"\r\n                    onChange={(e) => {\r\n                      setExperties(e.target.value);\r\n                    }}\r\n                    className=\"border outline-none text-gray-600 w-full rounded-md px-4 py-1\"\r\n                  />\r\n                  <div\r\n                    onClick={(event) => {\r\n                      setTherapist({\r\n                        ...therapist,\r\n                        expertise: [...therapist.expertise, experties],\r\n                      });\r\n                      setExperties(\"\");\r\n                    }}\r\n                    className=\"ml-4 w-[9vw] flex justify-center items-center py-1 bg-green-500 text-white rounded-lg cursor-pointer \"\r\n                  >\r\n                    Add New\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"grid pt-5 items-start\"\r\n              style={{ gridTemplateColumns: \"15% 85%\" }}\r\n            >\r\n              <p className=\"font-light text-[14px]\">Qualifications *</p>\r\n              <div>\r\n                {therapist?.qualifications?.map((e, i) => {\r\n                  return (\r\n                    <div className=\"flex items-center w-full mb-4\" key={i}>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={e}\r\n                        onChange={(val) => {\r\n                          let arr = therapist.qualifications;\r\n                          let index = arr.indexOf(e);\r\n                          arr[index] = val.target.value;\r\n                          setTherapist({\r\n                            ...therapist,\r\n                            qualifications: arr,\r\n                          });\r\n                        }}\r\n                        className=\"border outline-none text-gray-600 w-full rounded-md px-4 py-1\"\r\n                      />\r\n                      <div className=\"pl-4\">\r\n                        <AiOutlineClose\r\n                          className=\"bg-lightRed p-2 rounded-full text-red-500 hover:bg-red-500 hover:text-white transition-all cursor-pointer\"\r\n                          size={35}\r\n                          onClick={(event) => {\r\n                            let arr = therapist?.qualifications;\r\n                            let pos = arr.indexOf(e);\r\n                            arr.splice(pos, 1);\r\n                            setTherapist({\r\n                              ...therapist,\r\n                              qualifications: arr,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div className=\"flex items-center w-full mb-4\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Qualication\"\r\n                    value={qualifications}\r\n                    onChange={(e) => {\r\n                      setQualifications(e.target.value);\r\n                    }}\r\n                    className=\"border outline-none text-gray-600 w-full rounded-md px-4 py-1\"\r\n                  />\r\n                  <div\r\n                    onClick={(event) => {\r\n                      setTherapist({\r\n                        ...therapist,\r\n                        qualifications: [\r\n                          ...therapist.qualifications,\r\n                          qualifications,\r\n                        ],\r\n                      });\r\n                      setQualifications(\"\");\r\n                    }}\r\n                    className=\"ml-4 w-[9vw] flex justify-center items-center py-1 bg-green-500 text-white rounded-lg cursor-pointer \"\r\n                  >\r\n                    Add New\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"grid pt-5 items-start\"\r\n              style={{ gridTemplateColumns: \"15% 85%\" }}\r\n            >\r\n              <p className=\"font-light text-[14px]\">Speaks *</p>\r\n              <div>\r\n                {therapist?.speaks?.map((e, i) => {\r\n                  return (\r\n                    <div className=\"flex items-center w-full mb-4\" key={i}>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={e}\r\n                        onChange={(val) => {\r\n                          let arr = therapist.speaks;\r\n                          let index = arr.indexOf(e);\r\n                          arr[index] = val.target.value;\r\n                          setTherapist({\r\n                            ...therapist,\r\n                            speaks: arr,\r\n                          });\r\n                        }}\r\n                        className=\"border outline-none text-gray-600 w-full rounded-md px-4 py-1\"\r\n                      />\r\n                      <div className=\"pl-4\">\r\n                        <AiOutlineClose\r\n                          className=\"bg-lightRed p-2 rounded-full text-red-500 hover:bg-red-500 hover:text-white transition-all cursor-pointer\"\r\n                          size={35}\r\n                          onClick={(event) => {\r\n                            let arr = therapist?.speaks;\r\n                            let pos = arr.indexOf(e);\r\n                            arr.splice(pos, 1);\r\n                            setTherapist({\r\n                              ...therapist,\r\n                              speaks: arr,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div className=\"flex items-center w-full mb-4\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={speaks}\r\n                    placeholder=\"Speaks\"\r\n                    onChange={(e) => {\r\n                      setSpeaks(e.target.value);\r\n                    }}\r\n                    className=\"border outline-none text-gray-600 w-full rounded-md px-4 py-1\"\r\n                  />\r\n                  <div\r\n                    onClick={(event) => {\r\n                      setTherapist({\r\n                        ...therapist,\r\n                        speaks: [...therapist.speaks, speaks],\r\n                      });\r\n                      setSpeaks(\"\");\r\n                    }}\r\n                    className=\"ml-4 w-[9vw] flex justify-center items-center py-1 bg-green-500 text-white rounded-lg cursor-pointer \"\r\n                  >\r\n                    Add New\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"grid pt-5 items-start\"\r\n              style={{ gridTemplateColumns: \"15% 85%\" }}\r\n            >\r\n              <p className=\"font-light text-[14px]\">About Therapist*</p>\r\n              <textarea\r\n                className=\"border outline-none text-gray-600 rounded-md px-4 py-2\"\r\n                rows={3}\r\n                cols={3}\r\n                value={therapist?.about}\r\n                placeholder=\"About\"\r\n                onChange={(e) => {\r\n                  setTherapist({ ...therapist, about: e.target.value });\r\n                }}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={onUpdate}\r\n            className=\"ml-4 w-[9vw] flex justify-center items-center py-1 float-right my-4 bg-green-500 text-white rounded-lg cursor-pointer \"\r\n          >\r\n            Update Details\r\n          </button>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\[name]\\schedule\\components\\Title.jsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\[name]\\schedule\\enter-details\\page.jsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\[name]\\schedule\\select-date\\page.jsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\therapists\\[name]\\schedule\\select-meet\\page.jsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\dashboard\\Components\\LeftBar copy.jsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\dashboard\\Components\\LeftBar.jsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\(main)\\user\\register\\otp-verification\\page.jsx",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\Context\\Context.js",[],[],"D:\\Work\\consciousleap\\ConsciousLeap\\app\\Context\\State.js",["257","258"],[],"\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Context from \"./Context\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"@/Utils/urls\";\r\nimport { getCookie } from \"cookies-next\";\r\n\r\nconst B2BState = (props) => {\r\n  const pathname = usePathname();\r\n\r\n  const [login, setLogin] = useState();\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    original: \"\",\r\n    otp: \"\",\r\n  });\r\n  const [isTherapistLogin, setIsTherapistLogin] = useState(false);\r\n  const [therapist, setTherapist] = useState();\r\n  const [areaOfExpertise, setAreaOfExpertise] = useState();\r\n  const [speaksFilter, setSpeaksFilter] = useState();\r\n  const [therapistFilters, setTherapistFilters] = useState({\r\n    search: \"\",\r\n    expertise: [],\r\n    speaks: [],\r\n  });\r\n  const [therapistsData, setTherapistsData] = useState([]);\r\n\r\n  const getTherapistsData = () => {\r\n    axios\r\n      .get(\r\n        `${BASE_URL}/therapist/get-all-therapists?search=${\r\n          therapistFilters?.search\r\n        }&speaks=${JSON.stringify(\r\n          therapistFilters?.speaks\r\n        )}&expertise=${JSON.stringify(therapistFilters?.expertise)}`\r\n      )\r\n      .then((response) => {\r\n        setTherapistsData(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTherapistsData();\r\n  }, [therapistFilters]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${BASE_URL}/therapist/get-area-of-expertise`)\r\n      .then((res) => {\r\n        setAreaOfExpertise(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${BASE_URL}/therapist/get-speaks`)\r\n      .then((res) => {\r\n        setSpeaksFilter(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (getCookie(\"token\")?.length > 1) {\r\n      setIsLogin(true);\r\n    }\r\n    if (getCookie(\"therapist_token\")?.length > 1) {\r\n      setIsTherapistLogin(true);\r\n      console.log(getCookie(\"therapist_token\"));\r\n    }\r\n  });\r\n\r\n  const getUser = () => {\r\n    axios\r\n      .post(`${BASE_URL}/login/get-user`, {\r\n        token: getCookie(\"token\"),\r\n      })\r\n      .then((res) => {\r\n        setLogin(res?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getTherapist = () => {\r\n    axios\r\n      .post(`${BASE_URL}/therapist/get-therapist`, {\r\n        token: getCookie(\"therapist_token\"),\r\n      })\r\n      .then((res) => {\r\n        setTherapist(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLogin) {\r\n      getUser();\r\n    }\r\n    if (isTherapistLogin) {\r\n      getTherapist();\r\n    }\r\n  }, [isLogin, isTherapistLogin]);\r\n\r\n  let therapists = {\r\n    therapist,\r\n    getTherapist,\r\n    isTherapistLogin,\r\n    setIsTherapistLogin,\r\n  };\r\n\r\n  let therapistFilter = {\r\n    areaOfExpertise,\r\n    speaksFilter,\r\n    therapistFilters,\r\n    setTherapistFilters,\r\n    therapistsData,\r\n  };\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        login,\r\n        user,\r\n        setUser,\r\n        isLogin,\r\n        setIsLogin,\r\n        getUser,\r\n        therapists,\r\n        therapistFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default B2BState;\r\n","D:\\Work\\consciousleap\\ConsciousLeap\\app\\Utils\\urls.js",[],[],{"ruleId":"259","severity":1,"message":"260","line":43,"column":6,"nodeType":"261","endLine":43,"endColumn":39,"suggestions":"262"},{"ruleId":"259","severity":1,"message":"263","line":29,"column":6,"nodeType":"261","endLine":29,"endColumn":8,"suggestions":"264"},{"ruleId":"259","severity":1,"message":"265","line":31,"column":6,"nodeType":"261","endLine":31,"endColumn":8,"suggestions":"266"},{"ruleId":"259","severity":1,"message":"265","line":25,"column":6,"nodeType":"261","endLine":25,"endColumn":8,"suggestions":"267"},{"ruleId":"259","severity":1,"message":"268","line":23,"column":6,"nodeType":"261","endLine":23,"endColumn":8,"suggestions":"269"},{"ruleId":"259","severity":1,"message":"270","line":50,"column":6,"nodeType":"261","endLine":50,"endColumn":8,"suggestions":"271"},{"ruleId":"259","severity":1,"message":"272","line":56,"column":6,"nodeType":"261","endLine":56,"endColumn":8,"suggestions":"273"},{"ruleId":"259","severity":1,"message":"274","line":52,"column":6,"nodeType":"261","endLine":52,"endColumn":24,"suggestions":"275"},{"ruleId":"259","severity":1,"message":"276","line":72,"column":3,"nodeType":"277","endLine":72,"endColumn":12,"suggestions":"278"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["279"],"React Hook useEffect has missing dependencies: 'login?.email', 'login?.name', and 'login?.phone'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has missing dependencies: 'history' and 'isLogin'. Either include them or remove the dependency array.",["281"],["282"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["283"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["284"],"React Hook useEffect has a missing dependency: 'therapists'. Either include it or remove the dependency array.",["285"],"React Hook useEffect has a missing dependency: 'getTherapistsData'. Either include it or remove the dependency array.",["286"],"React Hook useEffect contains a call to 'setIsLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["287"],{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},"Update the dependencies array to be: [id, therapistFilter?.therapistsData]",{"range":"305","text":"306"},"Update the dependencies array to be: [login?.email, login?.name, login?.phone]",{"range":"307","text":"308"},"Update the dependencies array to be: [history, isLogin]",{"range":"309","text":"310"},{"range":"311","text":"310"},"Update the dependencies array to be: [history]",{"range":"312","text":"313"},"Update the dependencies array to be: [router]",{"range":"314","text":"315"},"Update the dependencies array to be: [therapists]",{"range":"316","text":"317"},"Update the dependencies array to be: [getTherapistsData, therapistFilters]",{"range":"318","text":"319"},"Add dependencies array: []",{"range":"320","text":"321"},[1124,1157],"[id, therapistFilter?.therapistsData]",[818,820],"[login?.email, login?.name, login?.phone]",[1118,1120],"[history, isLogin]",[745,747],[773,775],"[history]",[1880,1882],"[router]",[1723,1725],"[therapists]",[1501,1519],"[getTherapistsData, therapistFilters]",[2192,2192],", []"]